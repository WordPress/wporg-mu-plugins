(()=>{"use strict";const e=window.React,t=window.wp.i18n,n=window.wp.blocks,r=window.wp.element,o=window.wp.blockEditor,l=window.wp.components,s=JSON.parse('{"UU":"wporg/link-wrapper"}');(0,n.registerBlockType)(s.UU,{edit:function({attributes:n,setAttributes:s}){const i=(0,r.useRef)(),a=i.current?.querySelectorAll('a,[data-type="core/button"]')||[];return(0,e.createElement)(e.Fragment,null,(0,e.createElement)(o.InspectorControls,{key:"setting"},(0,e.createElement)(l.PanelBody,{title:(0,t.__)("Link destination","wporg")},(0,e.createElement)(l.TextControl,{label:(0,t.__)("Link destination","wporg"),hideLabelFromVision:!0,value:n.url,onChange:e=>s({url:e}),type:"url"}))),(0,e.createElement)("div",{...(0,o.useBlockProps)({ref:i})},(0,e.createElement)(o.InnerBlocks,null),!!a.length&&(0,e.createElement)(l.Notice,{className:"wporg-link-wrapper__notice",spokenMessage:null,status:"warning",isDismissible:!1},(0,t.__)("This block should not contain links or buttons. Remove the link, or use a different container.","wporg"))))},save:({attributes:t})=>{const n=o.useBlockProps.save();return(0,e.createElement)("a",{...n,href:t.url},(0,e.createElement)(o.InnerBlocks.Content,null))}})})();